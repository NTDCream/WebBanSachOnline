@model WebBanSachOnline.Models.Order
@using PagedList.Mvc;
@using PagedList;
@{
    ViewBag.Title = "Details";
    var pagedOrderDetails = ViewBag.PagedOrderDetails as IPagedList<WebBanSachOnline.Models.OrderDetail>;
}


<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Quản lý đơn mua - Nhà Sách Online</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css"
          rel="stylesheet" />
    <!-- Font Awesome for icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
          rel="stylesheet" />
    <!-- Custom CSS -->
    <link href="~/Content/style.css" rel="stylesheet" />
</head>
<body>


    <!-- Main Content -->
    <div class="container-fluid mt-4">
        <div class="row">
            <div class="col-12 text-center mb-4">
                <h2 class="order-management-title">Chi tiết đơn hàng</h2>
            </div>
        </div>



        <!-- Order Details Panel -->
        <div class="card-body">
            <div class="table-responsive">
                <div>
                    <div class="col-md-4">
                        <strong>Mã đơn hàng:</strong> <span id="detail-order-id">@Model.slug</span>
                    </div>
                    <div class="col-md-4">
                        <strong>Ngày tạo:</strong> <span id="detail-order-date">@Model.createdDate</span>
                    </div>
                    <div class="col-md-4">
                        <strong>Trạng thái:</strong>
                        <span id="detail-order-status">
                            @if (Model.status.ToLower() == "paid")
                            {

                                <span class="badge bg-success">Đã thanh toán</span>
                            }
                            else if (Model.status.ToLower() == "pending")
                            {
                                <span class="badge bg-warning text-dark">Chờ thanh toán</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">Đã hủy</span>

                            }
                        </span>
                    </div>
                </div>
                <br>
                <table class="table table-bordered table-hover" style="text-align:center">
                    <thead class="table-light">
                        <tr>
                            <th>STT</th>
                            <th>Ảnh</th>
                            <th>Tên sách</th>
                            <th>Danh mục</th>
                            <th>Giá</th>
                            <th>Số lượng</th>
                            <th>Thành tiền</th>
                        </tr>
                    </thead>
                    <tbody id="order-list">
                        <!-- Orders will be loaded here -->
                        @{
                            int i = (pagedOrderDetails.PageNumber - 1) * pagedOrderDetails.PageSize + 1;
                        }
                        @foreach (var item in Model.OrderDetails)
                        {

                            string imagePath = "~/BookImages/" + item.Book.image;
                            int price = item.price * item.quantity;
                            <tr>
                                <td>@i</td>
                                <td><img src="@Url.Content(imagePath)" class="card-img-top " style="height: 150px; width: 100px;" alt=@item.Book.title></td>
                                <td>@item.Book.title</td>
                                <td>@item.Book.Category.title</td>
                                <td>@string.Format("{0:N0} đ", item.price)</td>
                                <td>@item.quantity</td>
                                <td>@string.Format("{0:N0} đ", price)</td>

                            </tr>
                            i++;
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="6" class="text-end">Tổng tiền:</td>
                            <td class="fw-bold text-danger"
                                id="detail-order-total">
                                @string.Format("{0:N0} đ", Model.totalAmount)
                            </td>
                        </tr>
                    </tfoot>
                </table>
                <div class="d-flex justify-content-center">
                    @Html.PagedListPager(pagedOrderDetails, page => Url.Action("Details", new { slug = Model.slug, page }),
                    new PagedListRenderOptions
                    {
                        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                        DisplayLinkToLastPage = PagedListDisplayMode.Always,
                        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                        DisplayLinkToNextPage = PagedListDisplayMode.Always,
                        DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                        MaximumPageNumbersToDisplay = 5
                    })
                </div>
            </div>
        </div>
        <!--<div class="modal-footer">
        <button type="button"
                class="btn btn-secondary"
                data-bs-dismiss="modal">
            Đóng
        </button>-->
        @*<button type="button" class="btn btn-danger" id="cancel-order-btn">
                Hủy đơn
            </button>*@
        <!--</div>-->
        <!-- Toast Container -->
        <div id="toast-container"
             class="position-fixed bottom-0 end-0 p-3"
             style="z-index: 1100">
            <!-- Toasts will be appended here -->
        </div>
    </div>
    <!-- Bootstrap JS Bundle (includes Popper) -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

    <style>
        .pagination {
            display: flex;
            list-style: none;
            padding-left: 0;
        }

            .pagination li {
                margin: 0;
            }

                .pagination li a,
                .pagination li span {
                    display: block;
                    padding: 0.375rem 0.75rem;
                    margin-left: -1px;
                    border: 1px solid #dee2e6;
                    color: #007bff;
                    text-decoration: none;
                    background-color: #fff;
                    cursor: pointer;
                    user-select: none;
                    border-radius: 0;
                }

                .pagination li:first-child a,
                .pagination li:first-child span {
                    border-top-left-radius: 0.25rem;
                    border-bottom-left-radius: 0.25rem;
                    margin-left: 0;
                }

                .pagination li:last-child a,
                .pagination li:last-child span {
                    border-top-right-radius: 0.25rem;
                    border-bottom-right-radius: 0.25rem;
                }

                .pagination li a:hover {
                    background-color: #e9ecef;
                    border-color: #dee2e6;
                    color: #0056b3;
                }

                .pagination li.active span {
                    background-color: #007bff;
                    border-color: #007bff;
                    color: white;
                }
    </style>
</body>
</html>
