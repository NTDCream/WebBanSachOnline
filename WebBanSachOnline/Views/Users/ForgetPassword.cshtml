
@{
    ViewBag.Title = "ForgetPassword";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Đặt Lại Mật Khẩu - Nhà Sách Online</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css"
          rel="stylesheet" />
    <!-- Font Awesome for icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
          rel="stylesheet" />
    <!-- Custom CSS -->
    <link href="~/Content/style.css" rel="stylesheet" />
</head>
<body>
    

    <!-- Reset Password -->
    <div class="container mt-5">
        <div class="login-container">
            <!-- Reset Form View -->
            <div id="reset-form-view">
                <div class="text-center mb-4">
                    <h3>
                        <i class="fas fa-key me-2 text-primary"></i>Đặt Lại Mật Khẩu
                    </h3>
                </div>
                <form id="reset-password-form">
                    <div class="mb-3 position-relative">
                        <input type="password"
                               class="form-control"
                               id="new-password"
                               placeholder="Mật khẩu mới"
                               required />
                        <i class="fas fa-lock position-absolute top-50 translate-middle-y ms-3"
                           style="opacity: 0.5"></i>
                    </div>
                    <div class="mb-3 position-relative">
                        <input type="password"
                               class="form-control"
                               id="confirm-password"
                               placeholder="Nhập lại mật khẩu"
                               required />
                        <i class="fas fa-lock position-absolute top-50 translate-middle-y ms-3"
                           style="opacity: 0.5"></i>
                    </div>
                    <div class="d-grid gap-2">
                        <button type="button"
                                class="btn btn-primary"
                                onclick="handleResetPassword()">
                            Lưu
                        </button>
                    </div>
                </form>
            </div>

            <!-- Success View -->
            <div id="success-view" style="display: none">
                <div class="text-center mb-4">
                    <h3>
                        <i class="fas fa-check-circle me-2 text-primary"></i>Đặt Lại Mật
                        Khẩu Thành Công
                    </h3>
                </div>
                <div class="card">
                    <div class="card-body">
                        <p class="text-center">
                            Mật khẩu của bạn đã được đặt lại thành công!
                        </p>
                        <p class="text-center">Bạn có thể đăng nhập với mật khẩu mới.</p>
                    </div>
                </div>
                <div class="text-center mt-3">
                    <a href="/pages/sign-in.html" class="btn btn-primary">
                        Đăng nhập
                    </a>
                </div>
            </div>
        </div>
    </div>

    

    <!-- Toast Container -->
    <div id="toast-container"
         class="position-fixed bottom-0 end-0 p-3"
         style="z-index: 1100">
        <!-- Toasts will be appended here -->
    </div>

    <!-- Bootstrap JS Bundle (includes Popper) -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <!-- Custom JS -->
    <script src="~/Content/main..js"></script>
    <script>function handleResetPassword() {
        const newPassword = document.getElementById("new-password").value;
        const confirmPassword =
          document.getElementById("confirm-password").value;

        // Clear previous error messages
        clearErrorMessages();

        // Validation flag
        let isValid = true;

        // Basic validation
        if (!newPassword) {
          showError("new-password", "Vui lòng nhập mật khẩu mới.");
          isValid = false;
        } else if (newPassword.length < 6) {
          showError("new-password", "Mật khẩu phải có ít nhất 6 ký tự.");
          isValid = false;
        }

        if (!confirmPassword) {
          showError("confirm-password", "Vui lòng xác nhận mật khẩu.");
          isValid = false;
        } else if (newPassword !== confirmPassword) {
          showError("confirm-password", "Mật khẩu xác nhận không khớp!");
          isValid = false;
        }

        // If validation fails, stop execution
        if (!isValid) return;

        // In a real app, this would be an API call using the token from the URL
        const urlParams = new URLSearchParams(window.location.search);
        const token = urlParams.get("token");

        fetch("/api/auth/reset-password", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ token, newPassword }),
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error("Reset password failed");
            }
            return response.json();
          })
          .then((data) => {
            // Show success view
            showSuccessView();
          })
          .catch((error) => {
            // For demo purposes, still show success
            showSuccessView();
          });
      }

      // Function to show error message
      function showError(fieldId, message) {
        const field = document.getElementById(fieldId);

        // Add error class to input
        field.classList.add("is-invalid");

        // Check if there's already a tooltip icon within this container
        const container = field.closest(".position-relative");
        let tooltipIcon = container.querySelector(".error-tooltip");

        if (!tooltipIcon) {
          // Create new tooltip icon
          tooltipIcon = document.createElement("i");
          tooltipIcon.className =
            "fas fa-exclamation-circle text-danger error-tooltip";
          tooltipIcon.setAttribute("data-bs-toggle", "tooltip");
          tooltipIcon.setAttribute("data-bs-placement", "right");

          // Append to container
          container.appendChild(tooltipIcon);
        }

        // Update tooltip message
        tooltipIcon.setAttribute("title", message);
        tooltipIcon.setAttribute("data-bs-original-title", message);

        // Dispose existing tooltip if any
        const existingTooltip = bootstrap.Tooltip.getInstance(tooltipIcon);
        if (existingTooltip) {
          existingTooltip.dispose();
        }

        // Initialize tooltip
        new bootstrap.Tooltip(tooltipIcon).show();
      }

      // Function to clear all error messages
      function clearErrorMessages() {
        // Remove all tooltips
        const tooltips = document.querySelectorAll(".error-tooltip");
        tooltips.forEach((el) => {
          const tooltip = bootstrap.Tooltip.getInstance(el);
          if (tooltip) {
            tooltip.dispose();
          }
          el.remove();
        });

        // Remove is-invalid class from all inputs
        document.querySelectorAll(".is-invalid").forEach((el) => {
          el.classList.remove("is-invalid");
        });
      }

      function showSuccessView() {
        // Hide form view and show success view
        document.getElementById("reset-form-view").style.display = "none";
        document.getElementById("success-view").style.display = "block";

        // Update browser history to prevent back button issues
        window.history.pushState(
          { page: "success" },
          "Đặt Lại Mật Khẩu Thành Công",
          "?step=success"
        );

        // Redirect to login after 5 seconds
        setTimeout(function () {
          window.location.href = "/pages/sign-in.html";
        }, 5000);
      }

      // Handle form submission
      document
        .getElementById("reset-password-form")
        .addEventListener("submit", function (e) {
          e.preventDefault();
          handleResetPassword();
        });

      // Check URL parameters for deep linking/refresh
      document.addEventListener("DOMContentLoaded", function () {
        if (isLoggedIn()) {
          window.location.href = "/";
          return;
        }

        const urlParams = new URLSearchParams(window.location.search);
        const step = urlParams.get("step");

        if (step === "success") {
          document.getElementById("reset-form-view").style.display = "none";
          document.getElementById("success-view").style.display = "block";

          // Redirect to login after 5 seconds
          setTimeout(function () {
            window.location.href = "/pages/sign-in.html";
          }, 5000);
        }
      });

      // Handle browser back button
      window.addEventListener("popstate", function (event) {
        if (event.state && event.state.page === "form") {
          document.getElementById("success-view").style.display = "none";
          document.getElementById("reset-form-view").style.display = "block";
        }
      });</script>

    <style>
        .form-control {
            padding-left: 45px !important;
        }

        .is-invalid {
            border-color: #dc3545;
        }

        .error-tooltip {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            z-index: 5;
        }

        /* Make sure icon is visible on top of other elements */
        .position-relative {
            position: relative;
        }
    </style>
</body>
</html>


